version: '2'
services:
  # docker run -p 176.112.222.8:8080:8080 --link mysql:mysql jdocker/app
  demoApp:
    image: jdocker/app
    depends_on:
      - myslqdb
    links:
      - myslqdb
    ports:
      - "8080:8080"
      - "8000:8000"
    volumes:
      - ./app:/app
    environment:
          SPRING_DATASOURCE_URL: jdbc:mysql://myslqdb/test?autoReconnect=true&useSSL=false # mysql_host = myslqdb !!!
          SPRING_DATASOURCE_USERNAME: iozol
          SPRING_DATASOURCE_PASSWORD: 123456

  # docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_USER=iozol -e MYSQL_PASSWORD=123456 -e MYSQL_DATABASE=test -d mysql:5.7
  myslqdb:
    image: mysql:5.7
    ports:
      - "3306:3306"
    volumes:
      # смонтировать /var/lib/mysql контейнера на ./.data/db докер хоста
      # ./.data/db - путь к данным относительно текущей папки, где запускается docker-compose up
      # /var/lib/mysql - путь в контейнере myslqdb
      - "./.data/db:/var/lib/mysql" # ./.data/db - путь к данным относительно текущей папки, где запускается docker-compose up
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: iozol
      MYSQL_PASSWORD: 123456
      MYSQL_DATABASE: test
#sphinx:
#    image: centurylink/sphinx:2.1.9.01
#    volumes:
#        - $PWD:/usr/local/etc
#    ports:
#        - "9306:9306"

#http://zoltanaltfatter.com/2016/10/17/dockerized-microservices-with-datastore/