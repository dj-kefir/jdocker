# Sphinx configuration for the unit tests
#
# Setup test environment:
# - setup test Sphinx indexes:
# indexer --config /path/to/sphinx.conf --all [--rotate]
# - run the "searchd" daemon:
# searchd --config /path/to/sphinx.conf
# - Merge delta index
# indexer delta_index --rotate --config /path/to/sphinx.conf

#######################
#
# Sources
#
#######################

# Common Source
source common_source
{
	# data source type. mandatory, no default value
	# known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
	type			= mysql

	# some straightforward parameters for SQL source types
	sql_host		= db-test
	sql_user		= admin
	sql_pass		= pass
	sql_db			= db_test
	sql_port		= 3306	# optional, default is 3306

    # To accelerate the path to MySQL UNIX-socket
    # (to operations with the database was not over a TCP/IP stack server)
	#sql_sock		= /var/run/mysqld/mysqld.sock


	# MySQL specific client connection flags
	# optional, default is 0
	#
	mysql_connect_flags	= 32 # enable compression

	# Set charset of the connection and turn off cache queries
	sql_query_pre			= SET NAMES utf8
    sql_query_pre           = SET CHARACTER SET utf8
    sql_query_pre			= SET SESSION query_cache_type=OFF
}


source items_source : common_source
{
    sql_query               = \
        SELECT\
                id, content\
        FROM\
                items\
        WHERE\
                id >= $start AND id <= $end


	# query for crushing utems on several iterations
	sql_query_range		    = SELECT MIN(id),MAX(id) FROM items

	# count items per iteration
	sql_range_step		    = 1000

    # Downtime (sleep)before sending queries (is designed for unloading of the database server)
    # If set "1000", the sleep will last 1 second
	sql_ranged_throttle	= 0
}

#######################
#
# Indexes
#
#######################

index common_index
{
	# Method of storage index (none, inline, extern)
	docinfo			= extern

    # dictionary type, 'crc' or 'keywords'
    # crc is faster to index when no substring/wildcards searches are needed
    # crc with substrings might be faster to search but is much slower to index
    # (because all substrings are pre-extracted as individual keywords)
    # keywords is much faster to index with substrings, and index is much (3-10x) smaller
    # keywords supports wildcards, crc does not, and never will
    # optional, default is 'keywords'
    dict            = keywords

    # Memory lock
	mlock			= 0

	# Used morphological engines
	morphology		= stem_enru, soundex, metaphone

    #charset_table       = 0..9, A..Z->a..z, _, a..z, \
    #U+410..U+42F->U+430..U+44F, U+430..U+44F

    # The minimum length of words to be indexed, by default 1
    min_word_len		= 2

	# enabled strip html
	html_strip			= 1
}


index items_index : common_index
{
    source			= items_source
    path			= SPHINX_DATA_DIR/items_index
}


index distributed
{
	type			= distributed
	local			= items_index
}


# Indexer settings
indexer
{
    #  The maximum memory limit daemon
    mem_limit               = 32M
}

# Demon settings
searchd
{
    # [hostname:]port[:protocol], or /unix/socket/path to listen on
    # known protocols are 'sphinx' (SphinxAPI) and 'mysql41' (SphinxQL)
    #
    # multi-value, multiple listen points are allowed
    # optional, defaults are 9312:sphinx and 9306:mysql41, as below
    #
    # listen            = 127.0.0.1
    # listen            = 192.168.0.1:9312
    # listen            = 9312
    # listen            = /var/run/searchd.sock
    listen = 127.0.0.1:9312
    listen = 9306:mysql41

    # logs
    log                     = SPHINX_LOG_DIR/searchd.log
    # logging queries . If you comment out,then log will not be
    query_log               = SPHINX_LOG_DIR/query.log
    query_log_format        = sphinxql

    # The time, in seconds, waiting for the daemon when communicating with the client. On the exhaustion of rupture of connection
    read_timeout            = 5

    #  	The max of threads (children) from the process. 0 means unlimited
    max_children            = 30

    pid_file		= SPHINX_RUN

    workers                 = threads # for RT to work

    # binlog files path; use empty string to disable binlog
    # optional, default is build-time configured data directory
    #
    # binlog_path		= # disable logging
    binlog_path		= SPHINX_DATA_DIR # binlog.001 etc will be created there
}
# --eof--
